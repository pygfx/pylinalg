# ===== Project info

[project]
name = "pylinalg"
version = "0.6.0"
description = "Linear algebra utilities for Python"
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "Almar Klein" }, { name = "Korijn van Golen" }]
keywords = [
    "graphics",
    "3d",
    "linear algebra",
]
requires-python = ">= 3.9"
dependencies = [
    "numpy>=1.20.0",
]

[project.optional-dependencies]
lint = ["ruff"]
docs = [
    "sphinx>7.2",
    "sphinx_rtd_theme",
]
tests = [
    "pytest",
    "pytest-cov",
    "pytest-watcher",
    "hypothesis[numpy]~=6.61.0",
    "packaging",
    "twine",
    "scipy",
]
dev = ["pylinalg[lint,tests,docs]"]

[project.urls]
Repository = "https://github.com/pygfx/pylinalg"

# ===== Building

# Flit is great solution for simple pure-Python projects.
[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

# ===== Tooling

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["F", "E", "W", "N", "B", "RUF"]
ignore = [
    "E501",   # Line too long
    "E731",   # Do not assign a `lambda` expression, use a `def`
    "B019",   # Use of `functools.lru_cache` or `functools.cache` on methods can lead to memory leaks
    "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`"
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"tests/conftest.py" = ["B008"]