name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

concurrency:
  group: CI-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install poetry
        run: pip install "poetry==1.3.1"
      - name: Install dependencies
        run: poetry install
      - name: Lint
        run: poetry run flake8

  test:
    name: Test on ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux py38
            pyversion: '3.8'
          - name: Linux py39
            pyversion: '3.9'
          - name: Linux py310
            pyversion: '3.10'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.pyversion }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.pyversion }}
      - name: Install poetry
        # Note: we may wish to install in a dedicated venv in the future
        # to avoid updating/changing poetries dependencies accidentally
        run: pip install "poetry==1.3.1"
      - name: Install dependencies
        run: poetry install
      - name: Test
        run: poetry run pytest -v --cov=pylinalg --cov-report=term-missing

  build:
    name: Build and test wheel
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install poetry
      run: pip install "poetry==1.3.1"
    - name: Install dependencies
      run: poetry install
    - name: Build wheel
      run: poetry build
    - name: Twine check
      run: poetry run twine check dist/*
    - name: Upload wheel artifact
      uses: actions/upload-artifact@v2
      with:
        path: dist
        name: dist

  publish:
    name: Publish release to Github and Pypi
    runs-on: ubuntu-latest
    needs: [lint, test, build]
    if: success() && startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Download assets
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        files: |
          dist/*.tar.gz
          dist/*.whl
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_PASSWORD }}
